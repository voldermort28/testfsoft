@using System.ServiceModel
@using DayPilot.Web.Mvc;
@using DayPilot.Web.Mvc.Enums
@using DayPilot.Web.Mvc.Events.Scheduler

@{
    ViewBag.Title = "ASP.NET MVC Hotel Room Booking";
}

<meta charset="utf-8">
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>

<style type="text/css">
    .scheduler_default_rowheader_inner {
        border-right: 1px solid #ccc;
    }

    .scheduler_default_rowheadercol2 {
        background: White;
    }

        .scheduler_default_rowheadercol2 .scheduler_default_rowheader_inner {
            top: 2px;
            bottom: 2px;
            left: 2px;
            background-color: transparent;
            border-left: 5px solid #1a9d13; /* green */
            border-right: 0px none;
        }

    .status_dirty.scheduler_default_rowheadercol2 .scheduler_default_rowheader_inner {
        border-left: 5px solid #ea3624; /* red */
    }

    .status_cleanup.scheduler_default_rowheadercol2 .scheduler_default_rowheader_inner {
        border-left: 5px solid #f9ba25; /* orange */
    }
</style>
<p>Date: <input type="text" id="datepicker"></p>
<button id="changeDate">Change</button>

<div style="margin-bottom: 20px;">
    Show rooms:
    @Html.DropDownList("Filter", new SelectListItem[]
        {
            new SelectListItem() { Text = "All", Value = "0" },
            new SelectListItem() { Text = "Single", Value = "1" },
            new SelectListItem() { Text = "Double", Value = "2" },
            new SelectListItem() { Text = "Triple", Value = "3" },
            new SelectListItem() { Text = "Family", Value = "4" },
        },
        new { @onchange = "filter('room', this.value)" }
    )
</div>


@Html.DayPilotScheduler("dp", new DayPilotSchedulerConfig
{
    BackendUrl = Url.Action("Backend", "Scheduler"),
    //Scale = TimeScale.Manual,

    EventHeight = 60,

    TimeRangeSelectedHandling = TimeRangeSelectedHandlingType.JavaScript,
    TimeRangeSelectedJavaScript = "create(start, end, resource);",
    TimeRangeSelectingJavaScript = "selecting(args)",

    EventClickHandling = EventClickHandlingType.JavaScript,
    EventClickJavaScript = "edit(e);",

    EventMoveHandling = EventMoveHandlingType.CallBack,
    EventResizeHandling = EventResizeHandlingType.CallBack,
    Days = 7,
    TreeEnabled = true,
    TreePreventParentUsage = true,
    //CellDuration=15,
    //TimeHeaders = new TimeHeaderCollection()
    //{
    //    new TimeHeader(GroupBy.Week, "dddd, d MMMM yyyy"),
    //    new TimeHeader(GroupBy.Hour),
    //    new TimeHeader(GroupBy.Cell)
    //},
    CellDuration = 15,
    TimeHeaders = new TimeHeaderCollection()
    {
        new TimeHeader(GroupBy.Day, "dddd, d MMMM yyyy"),
        new TimeHeader(GroupBy.Hour),
        new TimeHeader(GroupBy.Cell)
    },


    HeaderColumns = new RowHeaderColumnCollection()
    {
        new RowHeaderColumn("Room", 80),
        new RowHeaderColumn("Size", 80),
        new RowHeaderColumn("Status", 80)
    }
})

<script>
    function modal() {
        var m = new DayPilot.Modal();
        m.closed = function () {
            dp.clearSelection();
            var data = this.result;
            if (data == "OK") {
                dp.commandCallBack("refresh");
            }

        };
        return m;
    }

    function create(start, end, resource) {
        modal().showUrl('@Url.Action("Create", "Reservation")?start=' + start + "&end=" + end + "&resource=" + resource);
    }
    function edit(e) {
        modal().showUrl('@Url.Action("Edit", "Reservation")?id=' + e.id());
    }

    function filter(property, value) {
        if (!dp.clientState.filter) {
            dp.clientState.filter = {};
        }
        if (dp.clientState.filter[property] != value) { // only refresh when the value has changed
            dp.clientState.filter[property] = value;
            dp.commandCallBack('filter');
        }
    }

    function selecting(args) {
        console.log(args.end.getTime());
        console.log(args.start.getTime());
        var duration = Math.floor(new DayPilot.TimeSpan(args.end.getTime() - args.start.getTime()).totalMinutes());
        //duration = args.start.getTime() - args.end.getTime();

        args.left.enabled = true;
        args.left.html = "Bắt đầu:<br/>" + args.start.toString("M/d/yyyy");
        args.right.enabled = true;
        args.right.html = "Kết thúc:<br/>" + args.end.toString("M/d/yyyy") + "<br/>" + duration + " phút" ;
    }

</script>
<script>
    $(function () {
        $("#datepicker").datepicker();
    });

    $('#changeDate').click(function () {
        $.post('/Scheduler/ChangeDate/',
            {
                'date': $("#datepicker").val()
            },
            function (a) {
                dp.clearSelection();
                dp.commandCallBack("changeDate");
            });
    });
</script>