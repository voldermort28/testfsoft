@model MySony.ViewModels.SerialVm
@{
    ViewBag.Title = "Serial";
    Layout = "~/Views/Shared/_AdmLayout.cshtml";
}
<div class="container-fluid">
    <div class ="row">
        <div class="form-group form-group-city">
            
            <select id="slCategory" data-parsley-required="true" class="form-control chosen-select" style="width: 450px ; margin-left: 10px">
                <option value="-1">Tất cả</option>
                @foreach (var item in Model.lstCategories)
                {
                    <option value="@item.Key">@item.Value</option>
                }                
            </select>       
            <select id="slProduct" data-parsley-required="true" class="form-control chosen-select" style="width:250px">
                <option value="">Chọn sản phẩm</option>                 
            </select>     
            <input id="serialNumber" placeholder="Nhập số serial" class="k-input" style="border:1px solid darkgray;height:30px" />
            <button id="searchSerial" class="btn btn-s-md btn-dark">Tìm kiếm</button>
        </div>
    </div>      
    <div class="row">
        @Html.AntiForgeryToken()
        @(Html.Kendo().Grid<MySony.ViewModels.SerialDTO>()
              .Name("grid")
              .Columns(columns =>
              {
                  columns.Bound(p => p.serial_id).Title("ID").Filterable(false).Width(50);
                  columns.Bound(p => p.modelname).Title("Tên sản phẩm");
                  columns.Bound(p => p.serialnumber).Title("Số serial").Width(70).Sortable(false);
                  columns.Bound(p => p.productcode).Title("Mã code sản phẩm").Sortable(false);
                  columns.Bound(p => p.manufacturingdate).Title("Ngày mua").Format("{0:dd/MM/yyyy}").Width(100);
                  columns.Bound(p => p.batterynumber).Title("Số pin").Width(50).Sortable(false);
                  columns.Bound(p => p.adapternumber).Title("Số sạc").Width(50).Sortable(false);
                  columns.Bound(p => p.alphalenumber).Title("alphalenumber").Width(50).Sortable(false);
                  columns.Bound(p => p.period).Title("period").Sortable(false);
                  columns.Bound(p => p.expireddate).Title("Gia hạn BH").Format("{0:dd/MM/yyyy}").Width(100);
                  columns.Bound(p => p.dateimport).Title("dateimport").Format("{0:dd/MM/yyyy}").Width(100);
                  columns.Bound(p => p.fullname).Title("Tên khách hàng");
                  columns.Bound(p => p.status_id).Title("Trạng thái").ClientTemplate("<span class='fa fa-2x #=status_id == 1 ? 'fa-check text-success' : 'fa-remove text-danger' #'></span>").Filterable(false).Sortable(false).Width(80);                                    
              })
              .ToolBar(toolbar => { toolbar.Custom().Action("ExportSerial", "HeThong").Text("Export"); })
              .Sortable()
              .Resizable(resize => resize.Columns(true))
              .Pageable(pageable => pageable
                  .Refresh(true)
                  .PageSizes(true)
                  .ButtonCount(5))
              .Filterable(filterable => filterable
                  .Extra(false)
                  .Operators(operators => operators
                      .ForString(str => str.Clear().Contains("Contains"))
                  )
              )
              .AutoBind(false)
              .DataSource(dataSource => dataSource
                  .Ajax()
                  .PageSize(20)
                  .ServerOperation(true)
                  .Sort(sort => sort.Add("modelname").Ascending())
                  .Events(events => { events.Error("error_handler");})// events.RequestEnd("onRequestEnd"); })
                  .Model(model =>
                  {
                      model.Id(p => p.serial_id);
                  })
                 .Read(read => read.Action("Serial_Read", "HeThong").Data("parameterSearch"))
                  //.Create(update => update.Action("Serial_Create", "HeThong"))
                  //.Update(update => update.Action("Serial_Update", "HeThong"))
                  //.Destroy(update => update.Action("Serial_Destroy", "HeThong"))
              )
              )
    </div>
</div>
 

@section scripts{
    <script src="~/static/js/serial.js"></script>    
    <script src="~/static/js/chosen/chosen.jquery.min.js"></script>
    <script type="text/javascript">
        function error_handler(e) {
            if (e.errors) {
                var message = "Errors:\n";
                $.each(e.errors, function(key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function() {
                            message += this + "\n";
                        });
                    }
                });
                console.info(message);
            }
        }

        //function onRequestEnd(e) {
        //    if (e.type == "create" && !e.response.Errors) alert("Tạo mới thành công");
        //    else if (e.type == "update" && !e.response.Errors) alert("Cập nhật thông tin thành công");
        //    else if (e.type == "destroy" && !e.response.Errors) alert("Xóa thông tin thành công");
        //}

        $("#searchSerial").click(function() {
            $("#grid").data("kendoGrid").dataSource.read();
        });

        function parameterSearch() {
            return {
                categoryId: $("#slCategory").val(),
                productName: $("#slProduct").val().trim(),
                serialNumber: $("#serialNumber").val().trim()
            };
        } 
    </script>

}