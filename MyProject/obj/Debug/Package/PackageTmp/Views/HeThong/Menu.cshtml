@{
    ViewBag.Title = "Menu";
    Layout = "~/Views/Shared/_AdmLayout.cshtml";
}
<div class="container-fluid">
    <div class="row">
        @Html.AntiForgeryToken()
        @(Html.Kendo().Grid<MySony.Models.RS_Menu>()
        .Name("grid")
        .Columns(columns =>
        {
            columns.Bound(p => p.Name).Title("Tên");
            columns.Bound(p => p.CssClass);
            columns.Bound(p => p.Url).Title("Đường dẫn");
            columns.Command(command => { command.Edit().Text(" ").UpdateText(" ").CancelText(" "); command.Destroy().Text(" "); }).Width(110).Title("Thao tác");
        })
        .ToolBar(toolbar => toolbar.Create().Text("Thêm mới"))
        .Editable(editable => editable.Mode(GridEditMode.InLine))
        .Sortable()
        .Resizable(resize => resize.Columns(true))
        .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(5))
        .Filterable(filterable => filterable
            .Extra(false)
            .Operators(operators => operators
                .ForString(str => str.Clear().Contains("Contains"))
            )
        )
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(20)
            .ServerOperation(false)
            .Events(events => { events.Error("error_handler");})// events.RequestEnd("onRequestEnd"); })
            .Model(model =>
            {
                model.Id(p => p.ID);
            })
            .Read(read => read.Action("Menu_Read", "HeThong"))
            .Create(update => update.Action("Menu_Create", "HeThong"))
            .Update(update => update.Action("Menu_Update", "HeThong"))
            .Destroy(update => update.Action("Menu_Destroy", "HeThong"))
            )
        )
    </div>
</div>
@section scripts{
    <script type="text/javascript">
        function error_handler(e) {
            if (e.errors) {
                var message = "Errors:\n";
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                console.info(message);
            }
        }
        //function onRequestEnd(e) {
        //    if (e.type == "create" && !e.response.Errors) alert("Tạo mới thành công");
        //    else if (e.type == "update" && !e.response.Errors) alert("Cập nhật thông tin thành công");
        //    else if (e.type == "destroy" && !e.response.Errors) alert("Xóa thông tin thành công");
        //}
    </script>
}