@{
    ViewBag.Title = "Danh sách cửa hàng";
    Layout = "~/Views/Shared/_AdmLayout.cshtml";
}
<div class="container-fluid">
    <div class="row">
        @Html.AntiForgeryToken()
        @(Html.Kendo().Grid<MySony.Models.shop>()
        .Name("grid")
        .Columns(columns =>
        {
            columns.Bound(p => p.order_no).Title("STT").Filterable(false).Width(40);
            columns.Bound(p => p.shop_id).Title("ID").Filterable(false).Width(40);
            columns.ForeignKey(p => p.branch_id, (System.Collections.IEnumerable)ViewData["branches"], "ID", "name").EditorTemplateName("BranchEditor").Title("Chi nhánh");
            
            columns.Bound(p => p.name).Title("Tên");
            columns.ForeignKey(p => p.shoptype_id, (System.Collections.IEnumerable)ViewData["shoptypes"], "shoptype_id", "name").EditorTemplateName("ShopTypeEditor").Title("Loại cửa hàng");
            columns.ForeignKey(p => p.status_id, (System.Collections.IEnumerable)ViewData["status"], "status_id", "name").EditorTemplateName("StatusEditor").Title("Trạng thái").ClientTemplate("<span class='fa fa-2x #=status_id == 1 ? 'fa-check text-success' : 'fa-remove text-danger' #'></span>").Filterable(false).Width(80);            
            columns.Command(command => { command.Edit().Text(" ").UpdateText(" ").CancelText(" "); }).Width(110).Title("Cập nhật");
        })
        .ToolBar(toolbar => toolbar.Create().Text("Thêm mới"))
        .Editable(editable => editable.Mode(GridEditMode.InLine))
        .Sortable()
        .Groupable()
        .Resizable(resize => resize.Columns(true))
        .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(5))
        .Filterable(filterable => filterable
            .Extra(false)
            .Operators(operators => operators
                .ForString(str => str.Clear().Contains("Contains"))
            )
        )
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(50)
            .ServerOperation(false)
            .Events(events => { events.Error("error_handler"); })//events.RequestEnd("onRequestEnd"); })
            .Model(model =>
            {
                model.Id(p => p.shop_id);
                model.Field(p => p.shop_id).Editable(false);
                model.Field(p => p.city).Editable(false);
                model.Field(p => p.branch_id).DefaultValue(0);
                model.Field(p => p.shoptype_id).DefaultValue(0);
                model.Field(p => p.status_id).DefaultValue(0);
            })
            .Read(read => read.Action("Shop_Read", "HeThong"))
            .Create(update => update.Action("Shop_Create", "HeThong"))
            .Update(update => update.Action("Shop_Update", "HeThong"))
            //.Destroy(update => update.Action("Shop_Destroy", "HeThong"))
            )
        )
    </div>
</div>
@section scripts{
    <script type="text/javascript">
        function error_handler(e) {
            if (e.errors) {
                var message = "Errors:\n";
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                console.info(message);
            }
        }
        //function onRequestEnd(e) {
        //    if (e.type == "create" && !e.response.Errors) {
        //        alert("Tạo mới thành công");
        //        window.location.reload();
        //    }
        //    else if (e.type == "update" && !e.response.Errors) {
        //        alert("Cập nhật thông tin thành công");
        //        window.location.reload();
        //    }
        //    else if (e.type == "destroy" && !e.response.Errors) {
        //        alert("Xóa thông tin thành công");
        //        window.location.reload();
        //    }
        //}
    </script>
}