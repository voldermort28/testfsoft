@{
    ViewBag.Title = "Danh mục sản phẩm";
    Layout = "~/Views/Shared/_AdmLayout.cshtml";
}
<div class="container-fluid">
    <div class="row">
        @Html.AntiForgeryToken()
        @(Html.Kendo().Grid<MySony.Models.category>()
        .Name("grid")
        .Columns(columns =>
        {
            columns.Bound(p => p.category_id).Width(40).Title("ID").Filterable(false); 
            columns.Bound(p => p.name).Title("Loại sản phẩm");
            columns.Bound(p => p.modelImage).ClientTemplate("<img src='#=modelImage#' width='150' height='100' alt='#=name#'/>").Title("Hình sản phẩm");
            columns.Bound(p => p.serialImage).ClientTemplate("<img src='#=serialImage#' width='150' height='100' alt='#=name#' />").Title("Hình serial");
            columns.Bound(p => p.viewModelImage).ClientTemplate("<img src='#=viewModelImage#' width='150' height='100' alt='#=name#'/>").Title("Hướng dẫn xem model");
            columns.Bound(p => p.viewSerialImage).ClientTemplate("<img src='#=viewSerialImage#' width='150' height='100' alt='#=name#' />").Title("Hướng dẫn xem serial");
            columns.Bound(p => p.RS_base_warranty_months).Title("Số tháng bảo hành");
            columns.Bound(p => p.status_id).Width(80).ClientTemplate("<span class='fa fa-2x #=status_id == 1 ? 'fa-check text-success' : 'fa-remove text-danger' #'></span>").Title("Trạng thái").Filterable(false);
            columns.Bound(p => p.category_id).ClientTemplate(@Html.ActionLink("Chi tiết", "ProductCategoryEditor", new { id = "#=category_id#" }).ToHtmlString()).Title("Cập nhật").Width(100).Filterable(false).Sortable(false);
            //columns.Command(command => { command.Destroy().Text(" "); }).Width(60).Title("Thao tác");
        })
        .ToolBar(toolbar => toolbar.Custom().Action("ProductCategoryEditor", "HeThong", new { Id = 0 }).Text("Thêm mới"))
        //.Editable(editable => editable.Mode(GridEditMode.InLine))
        .Sortable()
        .Resizable(resize => resize.Columns(true))
        .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(5))
        //.Filterable(filterable => filterable
        //    .Extra(false)
        //    .Operators(operators => operators
        //        .ForString(str => str.Clear().Contains("Contains"))
        //    )
        //)
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(20)
            .ServerOperation(false)
            .Events(events => { events.Error("error_handler");  })//events.RequestEnd("onRequestEnd"); })
            .Sort(sort => sort.Add("category_id").Descending())
            .Model(model =>
            {
                model.Id(p => p.category_id);
                model.Field(p => p.category_id).Editable(false);
                model.Field(p => p.status_id).DefaultValue(0);
            })
            .Read(read => read.Action("ProductCategory_Read", "HeThong"))
            //.Destroy(update => update.Action("ProductCategory_Destroy", "HeThong"))
            )
        )
    </div>
</div>
@section scripts{
    <script type="text/javascript">
        function error_handler(e) {
            if (e.errors) {
                var message = "Errors:\n";
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                console.info(message);
            }
        }
        //function onRequestEnd(e) {
        //    if (e.type == "create" && !e.response.Errors) alert("Tạo mới thành công");
        //    else if (e.type == "update" && !e.response.Errors) alert("Cập nhật thông tin thành công");
        //    else if (e.type == "destroy" && !e.response.Errors) alert("Xóa thông tin thành công");
        //}
    </script>
}